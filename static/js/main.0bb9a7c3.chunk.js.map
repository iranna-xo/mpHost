{"version":3,"sources":["Pages/components/createGroup.js","Pages/components/group.js","Pages/components/resetPassword.js","Pages/dashBoard.js","Pages/ErrorPage.js","Pages/signUp.js","Pages/signIn.js","App.js","reportWebVitals.js","index.js"],"names":["CreateGroup","props","state","account","loading","email","emails","showResults","group","members","chitfunds","a","this","alert","i","length","methods","checkEmail","call","push","value","createGroup","groupName","amount","send","from","once","receipt","setOpenCreateUi","window","location","reload","catch","err","onSubmit","event","preventDefault","id","type","ref","input","placeholder","label","required","style","fontWeight","fontSize","onClick","checkEmailReact","disabled","Component","Group","undefined","winners","winnerSet","winnerId","payed","groupNumber","setState","groups","x","name","y","split","pop","admin","Number","winner","tempMembers","flag","j","max","rand","Math","floor","random","getUserNumber","userNumber","users","winnerAddress","defaultAddress","console","log","join","getUserName","winnerUserName","setWinner","reloadGroups","payWinner","map","key","checkIfAdmin","luckyDraw","checkIfPayed","payTheWinner","ResetPassword","oldPassword","newPassword","login","resetPassword","reciept","setReset","DashBoard","userName","createui","groupNumbers","loadWeb3","loadBlockchainData","setUserName","getGroupCount","getGroups","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","net","getId","networkId","networkData","ChitFunds","networks","Contract","abi","address","groupCount","includes","setloading","className","alignSelf","nav","dashBoard","pageWrap","openCreateUi","openReset","ErrorFunction","useNavigate","useParams","useState","ErrorPage","Login","clear","fname","lname","password","createUser","signUp","qw","ee","to","class","re","LoginFunction","SignIn","flag1","signIn","SignInFunction","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bb9a7c3.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass CreateGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      account:this.props.account,\r\n      loading: true,\r\n      email: this.props.email,\r\n      emails: [this.props.email],\r\n      showResults: false,\r\n      group: \"\",\r\n      members: \"\",\r\n      chitfunds: this.props.chitfunds,\r\n    };\r\n  }\r\n\r\n  async checkEmailReact(email) {\r\n\r\n    if(email === this.state.email){\r\n      alert(\"You Are already apart of the group\");\r\n      return;\r\n\r\n\r\n    }\r\n    for(let i = 0 ; i< this.state.emails.length; i++){\r\n      if(email === this.state.emails[i]){\r\n        alert(\"This email is already apart of the group\");\r\n        return ;\r\n      }\r\n    }\r\n    let flag = true;\r\n    flag = await this.props.chitfunds.methods.checkEmail(email).call();\r\n    if (flag) {\r\n      alert(\"User added to group\");\r\n      this.state.emails.push(this.email.value);\r\n    } else {\r\n      alert(\"User doesn't have account\");\r\n    }\r\n  }\r\n  async createGroup() {\r\n    \r\n    let members = \"\";\r\n    for (let i = 0; i < this.state.emails.length; i++) {\r\n      members = members + this.state.emails[i] + \"|\";\r\n    }\r\n    // console.log(members);\r\n\r\n    await this.state.chitfunds.methods.createGroup(this.groupName.value,members,this.amount.value).send({from : this.state.account , value: 1000000000000000000})\r\n      .once(\"receipt\", (receipt) =>{\r\n        alert(\"Group is created\");\r\n        \r\n      this.props.setOpenCreateUi(false);\r\n        window.location.reload(true);\r\n        \r\n        \r\n      }).catch((err) =>{\r\n        alert(\"Please complete the transcation\");\r\n        \r\n      });\r\n      \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n       \r\n        <div>\r\n          <center><h2>Create Group</h2></center>\r\n        </div>\r\n        <center>\r\n        <form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n\r\n            this.createGroup();\r\n            \r\n          }}\r\n        >\r\n          \r\n            <div>\r\n              <input\r\n                id=\"groupName\"\r\n                type=\"text\"\r\n                ref={(input) => {\r\n                  this.groupName = input;\r\n                }}\r\n                placeholder=\"Group Name\"\r\n                label\r\n                required\r\n              />\r\n              <br></br>\r\n              <input type=\"number\" id =\"amount\"\r\n                ref={(input)=>{\r\n                  this.amount = input;\r\n                }}\r\n                placeholder= \"Amount\"></input><span style={{fontWeight: \"bolder\",\r\n                fontSize: \"20px\"}}></span>\r\n               <br></br>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                ref={(input) => {\r\n                  this.email = input;\r\n                }}\r\n                placeholder=\"Email\"\r\n              ></input>\r\n             <br></br>\r\n              <center><button\r\n                onClick={(event) => {\r\n                  event.preventDefault();\r\n                  this.checkEmailReact(this.email.value);\r\n                }}\r\n              >\r\n                Add\r\n              </button>\r\n              \r\n\r\n              <button type=\"submit\" disabled={this.state.groupName}>\r\n                Create Group\r\n              </button></center>\r\n            </div>\r\n          \r\n        </form></center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CreateGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Group extends Component {\r\n  async componentWillMount() {\r\n    await this.groupName(this.props.groupNumber);\r\n\r\n    this.setState({ loading: false });\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chitfunds: this.props.chitfunds,\r\n      account: this.props.account,\r\n      email: this.props.email,\r\n      groupName: \"\",\r\n      loading: true,\r\n      members: undefined,\r\n      winners: undefined,\r\n      amount: undefined,\r\n      winnerSet: false,\r\n      winnerId: \"\",\r\n      payed: undefined\r\n    };\r\n  }\r\n  async groupName(groupNumber) {\r\n    this.setState({ loading: true });\r\n    let x = await this.state.chitfunds.methods.groups(groupNumber).call();\r\n\r\n    this.setState({ groupName: x.name });\r\n\r\n    let y = x.members;\r\n    y = y.split(\"|\");\r\n    y.pop();\r\n    this.setState({ members: y });\r\n    this.setState({ admin: y[0] });\r\n    this.setState({ amount: Number(x.amount) });\r\n    y = x.winners;\r\n    y = y.split(\"|\");\r\n    y.pop();\r\n    this.setState({ winners: y });\r\n    this.setState({ amount: Number(x.amount) });\r\n    if (x.winner !== \"0x0000000000000000000000000000000000000000\") {\r\n      this.setState({ winnerSet: true });\r\n      // console.log();\r\n      this.setState({\r\n        winnerId: this.state.winners[this.state.winners.length - 1],\r\n      });\r\n    }\r\n    y = x.payed;\r\n    y = y.split(\"|\");\r\n    y.pop();\r\n    this.setState({ payed: y });\r\n    if(this.state.members.length === this.state.payed.length){\r\n      this.setState({winnerSet : false});\r\n      //making use of winnerSet only to redraw the lucky draw.\r\n    }\r\n    \r\n  }\r\n  async luckyDraw() {\r\n    let tempMembers = [];\r\n\r\n    if (this.state.winners.length !== 0) {\r\n      for (let i = 0; i < this.state.members.length; i++) {\r\n        let flag = false;\r\n\r\n        for (let j = 0; j < this.state.winners.length; j++) {\r\n          if (this.state.members[i] === this.state.winners[j]) {\r\n            flag = true;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          tempMembers.push(this.state.members[i]);\r\n        }\r\n      }\r\n    } else {\r\n      tempMembers = this.state.members;\r\n    }\r\n    if (this.state.members.length === this.state.winners.length) {\r\n      alert(\"Everyone has won once\");\r\n      return;\r\n    }\r\n\r\n    const min = 0;\r\n    const max = tempMembers.length;\r\n    const rand = Math.floor(min + Math.random() * (max - min));\r\n\r\n    const userNumber = await this.state.chitfunds.methods\r\n      .getUserNumber(tempMembers[rand])\r\n      .call();\r\n    let x = await this.state.chitfunds.methods.users(userNumber).call();\r\n    const winnerAddress = x.defaultAddress;\r\n    console.log(winnerAddress);\r\n    this.state.winners.push(tempMembers[rand]);\r\n    this.state.winners.push(\"\");\r\n    x = this.state.winners.join(\"|\");\r\n    console.log();\r\n    let winnerUserName = await this.state.chitfunds.methods\r\n      .getUserName(tempMembers[rand])\r\n      .call();\r\n    // string memory _email, string memory _winners,uint groupNumber\r\n    // let y = await this.state.chitfunds.methods.setWinner(tempMembers[rand],x,this.props.groupNumber).call();\r\n    // let z = await this.state.chitfunds.methods.groups(this.props.groupNumber).call();\r\n    // console.log(z);\r\n    await this.state.chitfunds.methods\r\n      .setWinner(tempMembers[rand], x, this.props.groupNumber, this.state.email+\"|\")\r\n      .send({\r\n        from: this.state.account,\r\n        value: this.state.amount * 1000000000000000000,\r\n      })\r\n      .once(\"receipt\", (receipt) => {\r\n        alert(\"The Winner is \" + winnerUserName);\r\n        this.props.reloadGroups();\r\n        window.location.reload(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // await this.state.chitfunds.methods.createGroup(this.groupName.value,this.state.email\r\n    //   ,members,this.amount.value).send({from : this.state.account , value: 1000000000000000000})\r\n    //   .once(\"receipt\", (receipt) =>{\r\n    //     alert(\"Group is created\");\r\n    //     this.props.setOpenCreateUi(false);\r\n\r\n    //   }).catch((err) =>{\r\n    //     alert(\"Please complete the transcation\");\r\n    //   });\r\n  }\r\n\r\n\r\n  async payTheWinner(){\r\n    \r\n    this.state.payed.push(this.state.email);\r\n     this.state.payed.push(\"\");\r\n    let x = this.state.payed.join(\"|\");\r\n    // payWinner(string memory _payed,uint groupNumber)\r\n    // await this.state.chitfunds.methods\r\n    //   .setWinner(tempMembers[rand], x, this.props.groupNumber, this.state.email+\"|\")\r\n    //   .send({\r\n    //     from: this.state.account,\r\n    //     value: this.state.amount * 1000000000000000000,\r\n    //   })\r\n    //   .once(\"receipt\", (receipt) => {\r\n    //     alert(\"The Winner is \" + winnerUserName);\r\n    //     this.props.reloadGroups();\r\n    //     window.location.reload(true);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    await this.state.chitfunds.methods.payWinner(x,this.props.groupNumber)\r\n    .send({from:this.state.account,value : this.state.amount * 1000000000000000000})\r\n    .once(\"receipt\",(receipt)=>{\r\n      alert(\"Payed the winner\");\r\n      window.location.reload(true);\r\n    })\r\n    .catch((err) =>{\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  checkIfAdmin() {\r\n    let x = this.state.admin === this.state.email;\r\n    let y = !this.state.winnerSet;\r\n    return x && y;\r\n  }\r\n\r\n  checkIfPayed() {\r\n    if(this.state.winnerSet){\r\n\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n    \r\n    if(this.state.payed === undefined){\r\n      return true;\r\n    }\r\n    for (let i = 0; i < this.state.payed.length; i++) {\r\n      if (this.state.email === this.state.payed[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center><div><h3>\r\n        <fieldset>\r\n          {!this.state.loading && <h2>Group Name: {this.state.groupName}</h2>}\r\n          <h3><u>Members</u></h3>\r\n          {!this.state.loading &&\r\n            this.state.members.map((i, key) => {\r\n              let y = \"\";\r\n\r\n              if (this.state.winnerSet) {\r\n                if (this.state.winnerId === i) {\r\n                  y = \"(Winner)\";\r\n                }\r\n              }\r\n              return (\r\n                <li key={key}>\r\n                  {i} {y}\r\n                </li>\r\n              );\r\n            })}\r\n          <br></br>\r\n          {this.checkIfAdmin() && (\r\n            <button\r\n              onClick={() => {\r\n                this.luckyDraw();\r\n              }}\r\n            >\r\n              Lucky Draw\r\n            </button>\r\n          )}\r\n          {!this.checkIfPayed() && (<button onClick={()=> {\r\n            this.payTheWinner();\r\n          }}>Pay the winner</button>)}\r\n          \r\n        </fieldset>\r\n        </h3></div></center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Group;\r\n","import { Component } from \"react\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  async resetPassword() {\r\n    if(this.oldPassword.value === this.newPassword.value){\r\n      alert(\"New Password can't be same as Old password\");\r\n      return;\r\n    }\r\n    let y = false;\r\n    let flag = await this.props.chitfunds.methods\r\n      .login(this.props.email, this.oldPassword.value)\r\n      .call();\r\n    if (Number(flag) === 1) {\r\n      let x = await this.props.chitfunds.methods\r\n        .resetPassword(\r\n          this.props.email,\r\n          this.oldPassword.value,\r\n          this.newPassword.value\r\n        )\r\n        .send({ from: this.props.account })\r\n        .once(\"reciept\", (reciept) => {\r\n          y = true\r\n          window.location.reload(true);\r\n        })\r\n        .catch((err)=>{\r\n          alert(\"Please complete the transaction\");\r\n        });\r\n        if(y){\r\n          \r\n        alert(\"Password Changed\");\r\n        this.props.setReset(false);\r\n        \r\n        }\r\n        \r\n    } else {\r\n      alert(\"Wrong Old password\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <center><div>\r\n        \r\n          <h2>Reset Password</h2>\r\n          <label>Old Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            ref={(input) => {\r\n              this.oldPassword = input;\r\n            }}\r\n            placeholder=\"Old Password\"\r\n            required\r\n          ></input>\r\n          <br></br>\r\n          <label>New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            ref={(input) => {\r\n              this.newPassword = input;\r\n            }}\r\n            placeholder=\"New Password\"\r\n            required\r\n          ></input>\r\n          <br></br>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.resetPassword();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        \r\n        <button onClick={()=>\r\n        {\r\n          this.props.setReset(false);\r\n        }}>Cancel</button>\r\n      </div></center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\nimport ChitFunds from \"../abis/ChitFunds.json\";\r\nimport CreateGroup from \"./components/createGroup\";\r\nimport Group from \"./components/group\";\r\nimport ResetPassword from \"./components/resetPassword\";\r\nimport dashBoard from \"./dashBoard.css\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\nclass DashBoard extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    await this.setUserName();\r\n    // console.clear();\r\n    // console.log(this.state.openCreateUi);\r\n    await this.getGroupCount();\r\n    await this.getGroups();\r\n\r\n    // await this.getUserNumber();\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3;\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.setState({ account: accounts[0] });\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkData = ChitFunds.networks[networkId];\r\n    if (networkData) {\r\n      const chitfunds = new web3.eth.Contract(\r\n        ChitFunds.abi,\r\n        networkData.address\r\n      );\r\n      this.setState({ chitfunds });\r\n      this.setState({ loading: false });\r\n    } else {\r\n      window.alert(\"ChitFunds contract not deployed to detected network.\");\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      loading: true,\r\n      email: this.props.userName,\r\n      emails: [],\r\n      showResults: false,\r\n      group: \"\",\r\n      members: \"\",\r\n      createui: false,\r\n      groupNumbers: [],\r\n    };\r\n  }\r\n  async setUserName() {\r\n    let x = await this.state.chitfunds.methods\r\n      .getUserName(this.state.email)\r\n      .call();\r\n    this.setState({ userName: x });\r\n  }\r\n  async checkEmailReact(email) {\r\n    let flag = true;\r\n    flag = await this.state.chitfunds.methods.checkEmail(email).call();\r\n    if (flag) {\r\n      alert(\"User added to group\");\r\n      this.state.emails.push(this.email.value);\r\n    } else {\r\n      alert(\"User doesn't have account\");\r\n    }\r\n  }\r\n\r\n  async getUserNumber() {\r\n    let x = await this.state.chitfunds.methods\r\n      .getUserNumber(this.state.email)\r\n      .call();\r\n\r\n    this.setState({ userNumber: Number(x) });\r\n  }\r\n  async reloadGroups() {\r\n    console.log(\"Hello\");\r\n    await this.getGroupCount();\r\n    await this.getGroups();\r\n  }\r\n  async getGroups() {\r\n    let groupNumbers = [];\r\n    let emails;\r\n    for (let i = 1; i <= this.state.groupCount; i++) {\r\n      emails = await this.state.chitfunds.methods.groups(`${i}`).call();\r\n      emails = emails.members;\r\n      let flag = emails.includes(this.state.email);\r\n\r\n      if (flag) {\r\n        groupNumbers.push(i);\r\n      }\r\n    }\r\n\r\n    this.setState({ groupNumbers: groupNumbers });\r\n  }\r\n\r\n  async getGroupCount() {\r\n    let x = await this.state.chitfunds.methods.groupCount().call();\r\n    this.setState({ groupCount: Number(x) });\r\n    this.props.setloading(false);\r\n  }\r\n  async resetPassword() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu>\r\n          <button\r\n            className=\"menu-item\"\r\n            onClick={() => {\r\n              this.props.setOpenCreateUi(true);\r\n            }}\r\n          >\r\n          \r\n\r\n            Create Group\r\n          </button>\r\n          \r\n          <button\r\n            style={{ alignSelf: \"center\" }}\r\n            onClick={(event) => {\r\n              this.props.setReset(true);\r\n            }}\r\n          >\r\n            Reset Password\r\n          </button>\r\n          <button\r\n            style={{ alignSelf: \"center\" }}\r\n            onClick={(event) => {\r\n              this.props.nav(\"/signIn\");\r\n            }}\r\n          >\r\n            Sign Out\r\n          </button>\r\n\r\n          {/* <a className=\"menu-item\" href=\"/desserts\">\r\n            Desserts\r\n          </a> */}\r\n        </Menu>\r\n        <div className={dashBoard.pageWrap}>\r\n          <i><h1>Welcome {this.state.userName}</h1></i>\r\n\r\n          <div>\r\n            {/* {!this.props.openCreateUi && (\r\n              <button\r\n                onClick={() => {\r\n                  this.props.setOpenCreateUi(true);\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Create Group{\" \"}\r\n              </button>\r\n            )} */}\r\n            {this.props.openCreateUi && (\r\n              <CreateGroup\r\n                chitfunds={this.state.chitfunds}\r\n                setOpenCreateUi={this.props.setOpenCreateUi}\r\n                email={this.state.email}\r\n                account={this.state.account}\r\n                loading={this.props.setloading}\r\n              />\r\n            )}\r\n            {this.props.openCreateUi && (\r\n              <h4><center><button\r\n                onClick={() => {\r\n                  this.props.setOpenCreateUi(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button></center></h4>\r\n            )}\r\n          </div>\r\n          <div>\r\n            {!this.props.loading &&\r\n              !this.props.openReset &&\r\n              this.state.groupNumbers.map((i, key) => {\r\n                return (\r\n                  <Group\r\n                    groupNumber={i}\r\n                    key={key}\r\n                    email={this.state.email}\r\n                    chitfunds={this.state.chitfunds}\r\n                    account={this.state.account}\r\n                    reloadGroups={this.reloadGroups}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div>\r\n            <br></br>\r\n            {/* {!this.props.openReset && (\r\n              <button\r\n                style={{ alignSelf: \"center\" }}\r\n                onClick={(event) => {\r\n                  this.props.setReset(true);\r\n                }}\r\n              >\r\n                Reset Password\r\n              </button>\r\n            )} */}\r\n\r\n            {this.props.openReset && (\r\n              <ResetPassword\r\n                chitfunds={this.state.chitfunds}\r\n                account={this.state.account}\r\n                setReset={this.props.setReset}\r\n                email={this.state.email}\r\n                openReset={this.props.openReset}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function ErrorFunction() {\r\n  const nav = useNavigate(); // extract navigation prop here\r\n  let { userName } = useParams();\r\n  const [openCreateUi, setOpenCreateUi] = useState(false);\r\n  const [loading, setloading] = useState(true);\r\n  const [openReset, setReset] = useState(false);\r\n  return (\r\n    <DashBoard\r\n      nav={nav}\r\n      userName={userName}\r\n      openCreateUi={openCreateUi}\r\n      setOpenCreateUi={setOpenCreateUi}\r\n      loading={loading}\r\n      setloading={setloading}\r\n      openReset={openReset}\r\n      setReset={setReset}\r\n    />\r\n  ); //pass to your component.\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass ErrorPage extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <center><h3>\r\n        This is Error Page\r\n        </h3></center></div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default function ErrorFunction() {\r\n  const nav = useNavigate(); // extract navigation prop here\r\n\r\n  return <ErrorPage nav={nav} />; //pass to your component.\r\n}","import React, { Component } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\nimport ChitFunds from \"../abis/ChitFunds.json\";\r\n\r\nimport signUp from './signUp.css';\r\n//login\r\nclass Login extends Component {\r\n  async componentWillMount() {\r\n    \r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    console.clear();\r\n  }\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3;\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.setState({ account: accounts[0] });\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkData = ChitFunds.networks[networkId];\r\n    if (networkData) {\r\n      const chitfunds = new web3.eth.Contract(\r\n        ChitFunds.abi,\r\n        networkData.address\r\n      );\r\n      this.setState({ chitfunds });\r\n      this.setState({ loading: false });\r\n    } else {\r\n      window.alert(\"ChitFunds contract not deployed to detected network.\");\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async checkEmailReact(fname, lname, email, password) {\r\n    let flag = true;\r\n    flag = await this.state.chitfunds.methods.checkEmail(email).call();\r\n    if (flag) {\r\n      alert(\"Email already exists\");\r\n    } else {\r\n      await this.createUser(fname, lname, email, password);\r\n     \r\n    }\r\n  }\r\n  async createUser(fname, lname, email, password) {\r\n    this.setState({ loading: true });\r\n\r\n    await this.state.chitfunds.methods\r\n      .createUser(fname, lname, email, password)\r\n      .send({ from: this.state.account, value: 1000000000000000000 })\r\n      .once(\"receipt\", (receipt) => {\r\n        this.setState({ loading: false })\r\n        this.props.nav(\"/signIn\");\r\n      }).catch(err=>{\r\n        console.clear();\r\n        alert(\"Please complete the transcation\")\r\n      });\r\n  }\r\n  async createGroupCheck(){\r\n    let flag = this.state.chitfunds.methods.createGroup(\"1\",\"1\",\"1\",\"1\")\r\n                .send({from:this.state.account, value : 1000000000000000000})\r\n                .once(\"receipt\", (receipt) => {\r\n                  this.setState({ loading: false })\r\n                  this.props.nav(\"/signIn\");\r\n                }).catch(err=>{\r\n                  console.clear();\r\n                  alert(\"Please complete the transcation\")\r\n                });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <body><div>\r\n      <div><h1>Welcome to ChitFunds</h1></div>\r\n      <center><div className={signUp.qw}>\r\n        <form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            const fname = this.fname.value;\r\n            const lname = this.lname.value;\r\n            const email = this.email.value;\r\n            const password = this.password.value;\r\n            this.checkEmailReact(fname, lname, email, password);\r\n          }}\r\n        >\r\n          \r\n          <div>\r\n            <input\r\n              id=\"fname\"\r\n              type=\"text\"\r\n              ref={(input) => {\r\n                this.fname = input;\r\n              }}\r\n              placeholder=\"firstname\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"lname\"\r\n              type=\"text\"\r\n              ref={(input) => {\r\n                this.lname = input;\r\n              }}\r\n              placeholder=\"last name\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              ref={(input) => {\r\n                this.email = input;\r\n              }}\r\n              placeholder=\"email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              ref={(input) => {\r\n                this.password = input;\r\n              }}\r\n              placeholder=\"password\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n          \r\n        </form>\r\n        <br></br>\r\n        \r\n      </div></center>\r\n      <center><h3><div className={signUp.ee}>\r\n          Already have a Account?\r\n          <Link to=\"/signIn\">\r\n            <div>\r\n              <h3><button class={signUp.re}>Login</button></h3>\r\n            </div>\r\n          </Link>\r\n          </div>\r\n          </h3></center>\r\n        </div>\r\n        </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function LoginFunction() {\r\n  const nav = useNavigate(); // extract navigation prop here\r\n\r\n  return <Login nav={nav} />; //pass to your component.\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\nimport ChitFunds from \"../abis/ChitFunds.json\";\r\nimport signIn from \"./signIn.css\";\r\n\r\nclass SignIn extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    console.clear();\r\n  }\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3;\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.setState({ account: accounts[0] });\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkData = ChitFunds.networks[networkId];\r\n    if (networkData) {\r\n      const chitfunds = new web3.eth.Contract(\r\n        ChitFunds.abi,\r\n        networkData.address\r\n      );\r\n      this.setState({ chitfunds });\r\n      this.setState({ loading: false });\r\n    } else {\r\n      window.alert(\"ChitFunds contract not deployed to detected network.\");\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async checkEmailReact(email, password) {\r\n    let flag = true;\r\n    flag = await this.state.chitfunds.methods.checkEmail(email).call();\r\n    if (flag) {\r\n      return true;\r\n    } else {\r\n      console.log(\"email doesn't exists\");\r\n      return false;\r\n    }\r\n  }\r\n  async login(email, password) {\r\n    this.setState({ loading: true });\r\n    let flag = false;\r\n    flag = this.checkEmailReact(email, password);\r\n\r\n    let flag1 = await this.state.chitfunds.methods\r\n      .login(email, password)\r\n      .call();\r\n    if (!flag) {\r\n      return;\r\n    }\r\n\r\n    if (flag1 == 1) {\r\n      // let username = await this.state.chitfunds.methods.getUserName(email).call();\r\n      let x = \"/dashBoard/\" + email;\r\n      this.props.nav(x);\r\n    } else {\r\n      alert(\"Wrong Password\");\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <h1>Welcome to ChitFunds</h1>\r\n          <div className={signIn.qw}>\r\n            <center>\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n\r\n                  const email = this.email.value;\r\n                  const password = this.password.value;\r\n                  this.login(email, password);\r\n                }}\r\n              >\r\n                <div>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    ref={(input) => {\r\n                      this.email = input;\r\n                    }}\r\n                    placeholder=\"email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    ref={(input) => {\r\n                      this.password = input;\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n              </form>\r\n            </center>\r\n          </div>\r\n          {/* <div style={{display:'flex',\r\n                      alignContent:'center',\r\n                      alignItems:'center'}}>\r\n            New User?\r\n            <div>\r\n              <Link to=\"/\">\r\n                <button>Sign Up</button>\r\n              </Link>\r\n            </div>\r\n          </div> */}\r\n          <br></br>\r\n          <center><h3>\r\n            <div>\r\n              New User?\r\n              <div>\r\n                <Link to=\"/\">\r\n                  <button>Sign Up</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </h3></center>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function SignInFunction() {\r\n  const nav = useNavigate(); // extract navigation prop here\r\n\r\n  return <SignIn nav={nav} />; //pass to your component.\r\n}\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport DashBoard from \"./Pages/dashBoard\";\r\nimport ErrorFunction from \"./Pages/ErrorPage\";\r\nimport LoginFunction from \"./Pages/signUp\";\r\nimport SignInFunction from \"./Pages/signIn\";\r\n//main routing\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    \r\n      <div >\r\n      <Routes>\r\n        <Route path=\"/\" element={<LoginFunction />} />\r\n        <Route path=\"/signIn\" element={<SignInFunction />} />\r\n        <Route path=\"/dashBoard/:userName\" element={<DashBoard />} />\r\n        <Route path=\"*\" element={<ErrorFunction />} />\r\n      </Routes>\r\n      </div>\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}